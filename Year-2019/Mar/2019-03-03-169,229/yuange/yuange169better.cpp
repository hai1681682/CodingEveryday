/***
 *_______________#########_______________________
 *______________############_____________________
 *______________#############____________________
 *_____________##_############___________________
 *____________###__######_#####__________________
 *____________###_########__####_________________
 *___________###__##########_####________________
 *__________####__###########_####_______________
 *________#####___###########__#####_____________
 *_______######___###_########___#####___________
 *_______#####___###___########___######_________
 *______######___###__###########___######_______
 *_____######___####_##############__######______
 *____#######__#####################_#######_____
 *____#######__##############################____
 *___#######__######_#################_#######___
 *___#######__######_######_#########___######___
 *___#######____##__######___######_____######___
 *___#######________######____#####_____#####____
 *____######________#####_____#####_____####_____
 *_____#####________####______#####_____###______
 *______#####______;###________###______#________
 *________##_______####________####______________
 */
// 遍历一次，遇到相同的数使计数器+1，不同的-1，每当计数器为0时更换返回元素
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int r = nums[0], c = 1;
        for (auto i : nums) {
            c += i == r ? 1 : -1;
            if (c == 0) {
                r = i;
                c = 1;
            }
        }
        return r;
    }
};
